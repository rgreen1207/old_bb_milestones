{
	"info": {
		"_postman_id": "047a7108-786d-49e1-965a-83633f935527",
		"name": "Milestones_program_awards",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25650478"
	},
	"item": [
		{
			"name": "program_awards",
			"item": [
				{
					"name": "Create Award",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (Array.isArray(jsonData)) {",
									"  pm.collectionVariables.set(\"award_uuid\", jsonData[0].uuid);",
									"} else {",
									"  pm.collectionVariables.set(\"award_uuid\", jsonData.uuid);",
									"}",
									"",
									"pm.test(\"uuid should exist\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.uuid).to.exist;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Award - Program Award Test\",\n    \"description\": \"this is a test award for Program Award Test.\",\n    \"hero_image\": null,\n    \"channel\": 5,\n    \"award_type\": 2,\n    \"value\": 5000\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/awards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"awards"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"uuid\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"latitude\": \"<integer>\",\n  \"longitude\": \"<integer>\",\n  \"time_created\": \"<integer>\",\n  \"time_updated\": \"<integer>\",\n  \"time_ping\": \"<integer>\",\n  \"time_birthday\": \"<integer>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"Bearer token missing or unknown\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										""
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"clients name should be 'RobCo-Program Award Test'\", function () {",
									"    if (Array.isArray(jsonData)) {",
									"        pm.expect(jsonData[0].name).to.eql('RobCo-Program Award Test');",
									"        pm.collectionVariables.set(\"client_uuid\", jsonData[0].uuid);",
									"        pm.collectionVariables.set(\"client_name\", jsonData[0].name)",
									"        pm.collectionVariables.set(\"client_description\", jsonData[0].description)",
									"    } else {",
									"        pm.expect(jsonData.name).to.eql('RobCo-Program Award Test');",
									"        pm.collectionVariables.set(\"client_uuid\", jsonData.uuid);",
									"        pm.collectionVariables.set(\"client_name\", jsonData.name)",
									"        pm.collectionVariables.set(\"client_description\", jsonData.description)",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"name\": \"RobCo-Program Award Test\",\n    \"description\": \"Blah\",\n    \"url\": \"https://www.youtube.com/watch?v=xvFZjo5PgG0\",\n    \"status\": 0\n  }\n]",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"uuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\",\n    \"time_ping\": \"<integer>\"\n  },\n  {\n    \"uuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\",\n    \"time_ping\": \"<integer>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"uuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\",\n    \"time_ping\": \"<integer>\"\n  },\n  {\n    \"uuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\",\n    \"time_ping\": \"<integer>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"Bearer token missing or unknown\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"uuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\",\n    \"time_ping\": \"<integer>\"\n  },\n  {\n    \"uuid\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\",\n    \"time_ping\": \"<integer>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										""
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Client User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"clients user title should be 'Grunt'\", function () {",
									"    if (Array.isArray(jsonData)) {",
									"        pm.expect(jsonData[0].title).to.eql('Grunt');",
									"        pm.collectionVariables.set(\"user_uuid\", jsonData[0].user_uuid);",
									"        pm.collectionVariables.set(\"client_user_uuid\", jsonData[0].uuid);",
									"    } else {",
									"        pm.expect(jsonData.title).to.eql('Grunt');",
									"        pm.collectionVariables.set(\"user_uuid\", jsonData.user_uuid);",
									"        pm.collectionVariables.set(\"client_user_uuid\", jsonData.uuid);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"email_address\": \"program.award.test@testclient.com\",\n  \"first_name\": \"TestUser\",\n  \"last_name\": \"ProgramAward\",\n  \"title\": \"Grunt\",\n  \"admin\": 1\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"users"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"active\": \"<boolean>\",\n    \"admin\": \"<integer>\",\n    \"uuid\": \"<string>\",\n    \"user_uuid\": \"<string>\",\n    \"client_uuid\": \"<string>\",\n    \"manager_uuid\": \"<string>\",\n    \"employee_id\": \"<string>\",\n    \"title\": \"<string>\",\n    \"department\": \"<string>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\",\n    \"time_hire\": \"<integer>\",\n    \"time_start\": \"<integer>\"\n  },\n  {\n    \"active\": \"<boolean>\",\n    \"admin\": \"<integer>\",\n    \"uuid\": \"<string>\",\n    \"user_uuid\": \"<string>\",\n    \"client_uuid\": \"<string>\",\n    \"manager_uuid\": \"<string>\",\n    \"employee_id\": \"<string>\",\n    \"title\": \"<string>\",\n    \"department\": \"<string>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\",\n    \"time_hire\": \"<integer>\",\n    \"time_start\": \"<integer>\"\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"users"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"Bearer token missing or unknown\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"users"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get User Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"user_uuid from create client user should match response\", function () {",
									"    var jsonData = pm.response.json();",
									"    var firstKey = Object.keys(jsonData)[0];",
									"    pm.collectionVariables.set(\"service_uuid\", jsonData[firstKey][0].uuid);",
									"    var user_uuid = pm.collectionVariables.get(\"user_uuid\")",
									"    pm.expect(jsonData[firstKey][0].user_uuid).to.eql(user_uuid);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/users/{{user_uuid}}/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"{{user_uuid}}",
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"client_uuid from request should match client_uuid from response\", function () {",
									"    var client_uuid = pm.collectionVariables.get(\"client_uuid\")",
									"    pm.expect(jsonData[0].client_uuid).to.eql(client_uuid);",
									"});",
									"",
									"pm.test(\"program_9char.length equals 9\", function(){",
									"    pm.expect(jsonData[0].program_9char.length).to.eql(9)",
									"})",
									"",
									"pm.collectionVariables.set(\"program_9char\", jsonData[0].program_9char)",
									"pm.collectionVariables.set(\"program_uuid\", jsonData[0].uuid)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"user_uuid\": \"{{user_uuid_from_client_user}}\",\n    \"name\": \"Program Event Test Program\",\n    \"description\": \"This program sends rewards to Blueboard employees on the Anniversary of their start date at the Company.\",\n    \"budget_9char\": null,\n    \"status\": 1,\n    \"program_type\": 4,\n    \"cadence\": 1,\n    \"cadence_value\": 2\n  }\n]",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/programs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"programs"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"uuid\": \"<string>\",\n    \"user_uuid\": \"<string>\",\n    \"program_9char\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"client_uuid\": \"<string>\",\n    \"budget_9char\": \"<string>\",\n    \"status\": \"<integer>\",\n    \"program_type\": \"<integer>\",\n    \"cadence\": \"<integer>\",\n    \"cadence_value\": \"<integer>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\"\n  },\n  {\n    \"uuid\": \"<string>\",\n    \"user_uuid\": \"<string>\",\n    \"program_9char\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"client_uuid\": \"<string>\",\n    \"budget_9char\": \"<string>\",\n    \"status\": \"<integer>\",\n    \"program_type\": \"<integer>\",\n    \"cadence\": \"<integer>\",\n    \"cadence_value\": \"<integer>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/programs/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"programs",
										""
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"uuid\": \"<string>\",\n    \"user_uuid\": \"<string>\",\n    \"program_9char\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"client_uuid\": \"<string>\",\n    \"budget_9char\": \"<string>\",\n    \"status\": \"<integer>\",\n    \"program_type\": \"<integer>\",\n    \"cadence\": \"<integer>\",\n    \"cadence_value\": \"<integer>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\"\n  },\n  {\n    \"uuid\": \"<string>\",\n    \"user_uuid\": \"<string>\",\n    \"program_9char\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"client_uuid\": \"<string>\",\n    \"budget_9char\": \"<string>\",\n    \"status\": \"<integer>\",\n    \"program_type\": \"<integer>\",\n    \"cadence\": \"<integer>\",\n    \"cadence_value\": \"<integer>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\"\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"uuid\": \"<string>\",\n    \"user_uuid\": \"<string>\",\n    \"program_9char\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"client_uuid\": \"<string>\",\n    \"budget_9char\": \"<string>\",\n    \"status\": \"<integer>\",\n    \"program_type\": \"<integer>\",\n    \"cadence\": \"<integer>\",\n    \"cadence_value\": \"<integer>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\"\n  },\n  {\n    \"uuid\": \"<string>\",\n    \"user_uuid\": \"<string>\",\n    \"program_9char\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"client_uuid\": \"<string>\",\n    \"budget_9char\": \"<string>\",\n    \"status\": \"<integer>\",\n    \"program_type\": \"<integer>\",\n    \"cadence\": \"<integer>\",\n    \"cadence_value\": \"<integer>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/programs/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"programs",
										""
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"Bearer token missing or unknown\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"uuid\": \"<string>\",\n    \"user_uuid\": \"<string>\",\n    \"program_9char\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"client_uuid\": \"<string>\",\n    \"budget_9char\": \"<string>\",\n    \"status\": \"<integer>\",\n    \"program_type\": \"<integer>\",\n    \"cadence\": \"<integer>\",\n    \"cadence_value\": \"<integer>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\"\n  },\n  {\n    \"uuid\": \"<string>\",\n    \"user_uuid\": \"<string>\",\n    \"program_9char\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"client_uuid\": \"<string>\",\n    \"budget_9char\": \"<string>\",\n    \"status\": \"<integer>\",\n    \"program_type\": \"<integer>\",\n    \"cadence\": \"<integer>\",\n    \"cadence_value\": \"<integer>\",\n    \"time_created\": \"<integer>\",\n    \"time_updated\": \"<integer>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/programs/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"programs",
										""
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create Client Award",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has uuid\", function () {",
									"    pm.expect(jsonData.uuid).to.exist;",
									"});",
									"",
									"if (Array.isArray(jsonData)) {",
									"  pm.collectionVariables.set(\"client_award_9char\", jsonData[0].client_award_9char);",
									"} else {",
									"  pm.collectionVariables.set(\"client_award_9char\", jsonData.client_award_9char);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{\n  \"award_uuid\": \"{{award_uuid}}\",\n  \"name\": \"Client Award-Program Award Test\",\n  \"description\": \"Just a client award for Program Award Test\",\n  \"hero_image\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/awards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"awards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Program Award",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has uuid\", function () {",
									"    pm.expect(jsonData.uuid).to.exist;",
									"});",
									"",
									"if (Array.isArray(jsonData)) {",
									"  pm.collectionVariables.set(\"program_award_9char\", jsonData[0].program_award_9char);",
									"} else {",
									"  pm.collectionVariables.set(\"program_award_9char\", jsonData.program_award_9char);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Program Award-Program Award Test \",\n  \"description\": \"this is an Award for Program Award Test\",\n  \"hero_image\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/programs/{{program_9char}}/awards/{{client_award_9char}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"programs",
								"{{program_9char}}",
								"awards",
								"{{client_award_9char}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Program Awards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"awards list should be greater then 0\", function(){",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.items.length).to.be.greaterThan(0)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/programs/{{program_9char}}/awards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"programs",
								"{{program_9char}}",
								"awards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Program Award",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"client_uuid from request should match response\", function () {",
									"    var jsonData = pm.response.json();",
									"    var client_uuid = pm.collectionVariables.get(\"client_uuid\")",
									"    pm.expect(jsonData.client_uuid).to.eql(client_uuid);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/programs/{{program_9char}}/awards/{{program_award_9char}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"programs",
								"{{program_9char}}",
								"awards",
								"{{program_award_9char}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Program Award",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Name should equal 'UPDATED-Program Award Test'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"UPDATED-Program Award Test\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"UPDATED-Program Award Test\",\n  \"description\": \"UPDATED-Program Award Test\",\n  \"hero_image\": \"new_hero_image.jpeg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/programs/{{program_9char}}/awards/{{program_award_9char}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"programs",
								"{{program_9char}}",
								"awards",
								"{{program_award_9char}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Program Award",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ok should be true\", function () {",
									"    pm.expect(jsonData.ok).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/programs/{{program_9char}}/awards/{{program_award_9char}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"programs",
								"{{program_9char}}",
								"awards",
								"{{program_award_9char}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ok should be true\", function(){",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.ok).to.eql(true)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/programs/{{program_9char}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"programs",
								"{{program_9char}}"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/programs/:program_9char",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"programs",
										":program_9char"
									],
									"variable": [
										{
											"key": "client_uuid"
										},
										{
											"key": "program_9char"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/programs/:program_9char",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"programs",
										":program_9char"
									],
									"variable": [
										{
											"key": "client_uuid"
										},
										{
											"key": "program_9char"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"Bearer token missing or unknown\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/programs/:program_9char",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"programs",
										":program_9char"
									],
									"variable": [
										{
											"key": "client_uuid"
										},
										{
											"key": "program_9char"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Client Award",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ok should be true\", function () {",
									"    pm.expect(jsonData.ok).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/awards/{{client_award_9char}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"awards",
								"{{client_award_9char}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Award",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ok should be true\", function () {",
									"    pm.expect(jsonData.ok).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/awards/{{award_uuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"awards",
								"{{award_uuid}}"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/users/:user_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										":user_uuid"
									],
									"variable": [
										{
											"key": "user_uuid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/users/:user_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										":user_uuid"
									],
									"variable": [
										{
											"key": "user_uuid"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"Bearer token missing or unknown\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/users/:user_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										":user_uuid"
									],
									"variable": [
										{
											"key": "user_uuid"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Client User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ok should be true\", function(){",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.ok).to.eql(true)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/users/{{client_user_uuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"users",
								"{{client_user_uuid}}"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"Bearer token missing or unknown\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete All Client Events",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}/delete_client_events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}",
								"delete_client_events"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"program_uuid\": \"<string>\",\n  \"client_uuid\": \"<string>\",\n  \"program_9char\": \"<string>\",\n  \"event_9char\": \"<string>\",\n  \"event_type\": \"<integer>\",\n  \"parent_9char\": \"<string>\",\n  \"segment_9char\": \"<string>\",\n  \"event_data\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"time_updated\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/programs/:program_9char/events/:event_9char",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"programs",
										":program_9char",
										"events",
										":event_9char"
									],
									"variable": [
										{
											"key": "client_uuid"
										},
										{
											"key": "program_9char"
										},
										{
											"key": "event_9char"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"uuid\": \"<string>\",\n  \"program_uuid\": \"<string>\",\n  \"client_uuid\": \"<string>\",\n  \"program_9char\": \"<string>\",\n  \"event_9char\": \"<string>\",\n  \"event_type\": \"<integer>\",\n  \"parent_9char\": \"<string>\",\n  \"segment_9char\": \"<string>\",\n  \"event_data\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"time_created\": \"<integer>\",\n  \"time_updated\": \"<integer>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"program_uuid\": \"<string>\",\n  \"client_uuid\": \"<string>\",\n  \"program_9char\": \"<string>\",\n  \"event_9char\": \"<string>\",\n  \"event_type\": \"<integer>\",\n  \"parent_9char\": \"<string>\",\n  \"segment_9char\": \"<string>\",\n  \"event_data\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"time_updated\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/programs/:program_9char/events/:event_9char",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"programs",
										":program_9char",
										"events",
										":event_9char"
									],
									"variable": [
										{
											"key": "client_uuid"
										},
										{
											"key": "program_9char"
										},
										{
											"key": "event_9char"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"Bearer token missing or unknown\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"program_uuid\": \"<string>\",\n  \"client_uuid\": \"<string>\",\n  \"program_9char\": \"<string>\",\n  \"event_9char\": \"<string>\",\n  \"event_type\": \"<integer>\",\n  \"parent_9char\": \"<string>\",\n  \"segment_9char\": \"<string>\",\n  \"event_data\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"time_updated\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid/programs/:program_9char/events/:event_9char",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid",
										"programs",
										":program_9char",
										"events",
										":event_9char"
									],
									"variable": [
										{
											"key": "client_uuid"
										},
										{
											"key": "program_9char"
										},
										{
											"key": "event_9char"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ok should be true\", function(){",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.ok).to.eql(true)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/clients/{{client_uuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"clients",
								"{{client_uuid}}"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"Bearer token missing or unknown\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete User Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ok should be true\", function(){",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.ok).to.eql(true)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/{{user_uuid}}/services/{{service_uuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"{{user_uuid}}",
								"services",
								"{{service_uuid}}"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"Bearer token missing or unknown\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ok should be true\", function(){",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.ok).to.eql(true)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/{{user_uuid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"{{user_uuid}}"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": \"Bearer token missing or unknown\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/clients/:client_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"clients",
										":client_uuid"
									],
									"variable": [
										{
											"key": "client_uuid"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://0.0.0.0"
		},
		{
			"key": "user_uuid",
			"value": "9b34922a71a58a8eba2980550feb8e009d39c75a00c5ae610845cc47",
			"type": "string"
		},
		{
			"key": "service_uuid",
			"value": "33f15cc4118f253d2131f448d3913015d58b1a472ebd343552c654e8",
			"type": "string"
		},
		{
			"key": "message_template_uuid",
			"value": "344a37d466fb39ad796fd08f4496eb74bb571f45f09acbf207b2dafb",
			"type": "string"
		},
		{
			"key": "client_uuid",
			"value": "1c2cb1bf8372e5f87d3fe03829111d05abf6ca782aabb6a4fbbc0843",
			"type": "string"
		},
		{
			"key": "program_9char",
			"value": "test_char",
			"type": "string"
		},
		{
			"key": "event_9char",
			"value": "test_char",
			"type": "string"
		},
		{
			"key": "award_9char",
			"value": "",
			"type": "string"
		},
		{
			"key": "message_9char",
			"value": "test_char",
			"type": "string"
		},
		{
			"key": "sub_budget_9char",
			"value": "",
			"type": "string"
		},
		{
			"key": "parent_9char",
			"value": ""
		},
		{
			"key": "static_parent_9char",
			"value": "",
			"type": "string"
		},
		{
			"key": "client_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "client_description",
			"value": "",
			"type": "string"
		},
		{
			"key": "client_user_uuid",
			"value": "",
			"type": "string"
		},
		{
			"key": "client_user_two_uuid",
			"value": ""
		},
		{
			"key": "user_uuid_from_client_user",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_uuid_from_client_user_two",
			"value": "",
			"type": "string"
		},
		{
			"key": "client_user_title",
			"value": "",
			"type": "string"
		},
		{
			"key": "client_user_department",
			"value": "",
			"type": "string"
		},
		{
			"key": "parent_budget_9char",
			"value": "",
			"type": "string"
		},
		{
			"key": "parent_budget_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "sub_budget_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "program_uuid",
			"value": "",
			"type": "string"
		},
		{
			"key": "sub_event_9char",
			"value": "subE_char",
			"type": "string"
		},
		{
			"key": "message_uuid",
			"value": "",
			"type": "string"
		},
		{
			"key": "award_uuid",
			"value": ""
		},
		{
			"key": "create_award",
			"value": ""
		},
		{
			"key": "create_client",
			"value": ""
		},
		{
			"key": "client_award_9char",
			"value": "test_char",
			"type": "string"
		},
		{
			"key": "program_award_9char",
			"value": "",
			"type": "string"
		},
		{
			"key": "create_client_user",
			"value": ""
		}
	]
}